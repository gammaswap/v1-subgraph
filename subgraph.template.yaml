specVersion: 0.0.4
schema:
  file: ./schema.graphql
dataSources:
  - name: GammaFactory
    kind: ethereum/contract
    network: {{network}}
    source:
      address: "{{factory}}"
      abi: Factory
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/factory.ts
      entities:
        - GammaPool
      abis:
        - name: Factory
          file: ./abis/IGammaPoolFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: PoolCreated(indexed address,indexed address,indexed uint16,address,address[],uint256)
          handler: handlePoolCreate
  - name: DeltaswapFactory
    kind: ethereum/contract
    network: {{network}}
    source:
      address: "{{dsFactory}}"
      abi: DeltaSwapFactory
      startBlock: {{dsStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/dsFactory.ts
      entities:
        - DeltaSwapPair
      abis:
        - name: DeltaSwapFactory
          file: ./abis/IDeltaSwapFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: PairCreated(indexed address,indexed address,address,uint256)
          handler: handlePairCreated
        - event: GammaPoolSet(indexed address,address)
          handler: handleGammaPoolSet
  - name: PositionManager
    kind: ethereum/contract
    network: {{network}}
    source:
      address: "{{positionManager}}"
      abi: PositionManager
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/positionManager.ts
      entities:
        - Loan
      abis:
        - name: PositionManager
          file: ./abis/IPositionManager.json
      eventHandlers:
        - event: CreateLoan(indexed address,indexed address,uint256,uint16)
          handler: handleLoanCreateFromPositionManager
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleLoanTransferFromPositionManager
  - name: StakingRouter
    kind: ethereum/contract
    network: {{network}}
    source:
      address: "{{stakingRouter}}"
      abi: IStakingRouter
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/staking/stakingRouter.ts
      entities:
        - RewardTracker
        - RewardDistributor
      abis:
        - name: IStakingRouter
          file: ./abis/staking/IStakingRouter.json
        - name: IRewardDistributor
          file: ./abis/staking/IRewardDistributor.json
        - name: IVester
          file: ./abis/staking/IVester.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: CoreTrackerCreated(address,address,address,address,address,address,address)
          handler: handleCoreTrackerCreate
        - event: CoreTrackerUpdated(address,address,address)
          handler: handleCoreTrackerUpdate
        - event: PoolTrackerCreated(indexed address,address,address,address)
          handler: handlePoolTrackerCreate
        - event: PoolTrackerUpdated(indexed address,address,address)
          handler: handlePoolTrackerUpdate
        - event: StakedGs(address,address,uint256)
          handler: handleGsStake
        - event: StakedLp(address,address,uint256)
          handler: handleLpStake
        # - event: StakedLoan(address,address,uint256)
        #   handler: handleLoanStake
        - event: UnstakedGs(address,address,uint256)
          handler: handleGsUnstake
        - event: UnstakedLp(address,address,uint256)
          handler: handleLpUnstake
        # - event: UnstakedLoan(address,address,uint256)
        #   handler: handleLoanUnstake
templates:
  - name: GammaPool
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: Pool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/pool.ts
      entities:
        - GammaPool
        - Loan
        - Position
        - Liquidation
        - Account
      abis:
        - name: Pool
          file: ./abis/IGammaPool.json
        - name: PoolViewer
          file: ./abis/IPoolViewer.json
        - name: DeltaSwapPair
          file: ./abis/IDeltaSwapPair.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: PoolUpdated(uint256,uint256,uint40,uint80,uint256,uint128,uint128,uint128[],indexed uint8)
          handler: handlePoolUpdate
        - event: LoanCreated(indexed address,uint256,uint16)
          handler: handleLoanCreate
        - event: LoanUpdated(indexed uint256,uint128[],uint128,uint128,uint256,uint96,indexed uint8)
          handler: handleLoanUpdate
        - event: Liquidation(indexed uint256,uint128,uint128,uint128,uint128,uint8)
          handler: handleLiquidation
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleVaultTokenTransfer
  - name: RewardTracker
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: IRewardTracker
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/staking/rewardTracker.ts
      entities:
        - RewardTracker
      abis:
        - name: IRewardTracker
          file: ./abis/staking/IRewardTracker.json
      eventHandlers:
        - event: DepositTokenSet(indexed address,bool)
          handler: handleDepositTokenSet
        - event: Stake(indexed address,indexed address,indexed address,uint256)
          handler: handleStake
        - event: Unstake(indexed address,indexed address,uint256,indexed address)
          handler: handleUnstake
        - event: RewardsUpdate(indexed uint256)
          handler: handleRewardsUpdate
        - event: UserRewardsUpdate(indexed address,uint256,uint256,uint256,uint256)
          handler: handleUserRewardsUpdate
        - event: Claim(indexed address,uint256,address)
          handler: handleClaim
  - name: RewardDistributor
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: IRewardDistributor
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/staking/rewardDistributor.ts
      entities:
        - RewardDistributor
      abis:
        - name: IRewardDistributor
          file: ./abis/staking/IRewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistribute
        - event: TokensPerIntervalChange(uint256)
          handler: handleEmissionChange
        - event: BonusMultiplierChange(uint256)
          handler: handleMultiplierChange
        - event: StatusChange(indexed address,uint256,bool)
          handler: handleStatusChange
  - name: DeltaSwapPair
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: DeltaSwapPair
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/pair.ts
      entities:
        - DeltaSwapPair
      abis:
        - name: DeltaSwapPair
          file: ./abis/IDeltaSwapPair.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Sync(uint112,uint112)
          handler: handleSync
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer